// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package follow

import (
	"github.com/google/wire"
	"github.com/philipnathan/pijar-backend/internal/follow/handler"
	follow2 "github.com/philipnathan/pijar-backend/internal/follow/repository"
	follow3 "github.com/philipnathan/pijar-backend/internal/follow/service"
	user3 "github.com/philipnathan/pijar-backend/internal/user"
	"github.com/philipnathan/pijar-backend/internal/user/repository"
	user2 "github.com/philipnathan/pijar-backend/internal/user/service"
	"gorm.io/gorm"
)

// Injectors from follow_wire.go:

func InitializedFollow(db *gorm.DB) (follow.FollowHandlerInterface, error) {
	followRepositoryInterface := follow2.NewFollowRepository(db)
	userRepositoryInterface := user.NewUserRepository(db)
	userServiceInterface := user2.NewUserService(userRepositoryInterface)
	followServiceInterface := follow3.NewFollowService(followRepositoryInterface, userServiceInterface)
	followHandlerInterface := follow.NewFollowHandler(followServiceInterface)
	return followHandlerInterface, nil
}

// follow_wire.go:

var FollowProviderSet = wire.NewSet(follow2.NewFollowRepository, follow3.NewFollowService, follow.NewFollowHandler, user3.UserProviderSet)
