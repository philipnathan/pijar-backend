// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package session_review

import (
	"github.com/google/wire"
	"github.com/philipnathan/pijar-backend/internal/learner/repository"
	"github.com/philipnathan/pijar-backend/internal/mentor_session_participant/repository"
	mentor_session_participant2 "github.com/philipnathan/pijar-backend/internal/mentor_session_participant/service"
	"github.com/philipnathan/pijar-backend/internal/session/repository"
	session2 "github.com/philipnathan/pijar-backend/internal/session/service"
	"github.com/philipnathan/pijar-backend/internal/session_review/handler"
	session_review2 "github.com/philipnathan/pijar-backend/internal/session_review/repository"
	session_review3 "github.com/philipnathan/pijar-backend/internal/session_review/service"
	"github.com/philipnathan/pijar-backend/internal/user/repository"
	user2 "github.com/philipnathan/pijar-backend/internal/user/service"
	"gorm.io/gorm"
)

// Injectors from session_review_wire.go:

func InitializedSessionReview(db *gorm.DB) (session_review.SessionReviewHandlerInterface, error) {
	sessionReviewRepositoryInterface := session_review2.NewSessionReviewRepository(db)
	userRepositoryInterface := user.NewUserRepository(db)
	userServiceInterface := user2.NewUserService(userRepositoryInterface)
	sessionRepository := session.NewSessionRepository(db)
	learnerRepositoryInterface := learner.NewLearnerRepository(db)
	sessionService := session2.NewSessionService(sessionRepository, learnerRepositoryInterface)
	mentorSessionParticipantRepositoryInterface := mentor_session_participant.NewMentorSessionParticipantRepository(db)
	mentorSessionParticipantServiceInterface := mentor_session_participant2.NewMentorSessionParticipantService(mentorSessionParticipantRepositoryInterface, userServiceInterface, sessionService)
	sessionReviewServiceInterface := session_review3.NewSessionReviewService(sessionReviewRepositoryInterface, userServiceInterface, sessionService, mentorSessionParticipantServiceInterface)
	sessionReviewHandlerInterface := session_review.NewSessionReviewHandler(sessionReviewServiceInterface)
	return sessionReviewHandlerInterface, nil
}

// session_review_wire.go:

var SessionReviewProviderSet = wire.NewSet(session_review2.NewSessionReviewRepository, session_review3.NewSessionReviewService, session_review.NewSessionReviewHandler)
