// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package learner

import (
	"github.com/google/wire"
	"github.com/philipnathan/pijar-backend/internal/learner/handler"
	learner2 "github.com/philipnathan/pijar-backend/internal/learner/repository"
	learner3 "github.com/philipnathan/pijar-backend/internal/learner/service"
	"gorm.io/gorm"
)

// Injectors from learner_bio_wire.go:

func InitializedLearnerBio(db *gorm.DB) (learner.LearnerBioHandlerInterface, error) {
	learnerBioRepositoryInterface := learner2.NewLearnerBioRepository(db)
	learnerBioServiceInterface := learner3.NewLearnerBioService(learnerBioRepositoryInterface)
	learnerBioHandlerInterface := learner.NewLearnerBioHandler(learnerBioServiceInterface)
	return learnerBioHandlerInterface, nil
}

// Injectors from learner_wire.go:

func InitializedLearner(db *gorm.DB) (learner.LearnerHandlerInterface, error) {
	learnerRepositoryInterface := learner2.NewLearnerRepository(db)
	learnerServiceInterface := learner3.NewLearnerService(learnerRepositoryInterface)
	learnerHandlerInterface := learner.NewLearnerHandler(learnerServiceInterface)
	return learnerHandlerInterface, nil
}

// learner_bio_wire.go:

var LearnerBioProviderSet = wire.NewSet(learner2.NewLearnerBioRepository, learner3.NewLearnerBioService, learner.NewLearnerBioHandler)

// learner_wire.go:

var LearnerProviderSet = wire.NewSet(learner2.NewLearnerRepository, learner3.NewLearnerService, learner.NewLearnerHandler)
