// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package mentor_session_participant

import (
	"github.com/google/wire"
	"github.com/philipnathan/pijar-backend/internal/learner/repository"
	"github.com/philipnathan/pijar-backend/internal/mentor_session_participant/handler"
	mentor_session_participant2 "github.com/philipnathan/pijar-backend/internal/mentor_session_participant/repository"
	mentor_session_participant3 "github.com/philipnathan/pijar-backend/internal/mentor_session_participant/service"
	"github.com/philipnathan/pijar-backend/internal/session/repository"
	session2 "github.com/philipnathan/pijar-backend/internal/session/service"
	"github.com/philipnathan/pijar-backend/internal/user/repository"
	user2 "github.com/philipnathan/pijar-backend/internal/user/service"
	"gorm.io/gorm"
)

// Injectors from mentor_session_wire.go:

func InitializedMentorSessionParticipant(db *gorm.DB) (mentor_session_participant.MentorSessionParticipantHandlerInterface, error) {
	mentorSessionParticipantRepositoryInterface := mentor_session_participant2.NewMentorSessionParticipantRepository(db)
	userRepositoryInterface := user.NewUserRepository(db)
	userServiceInterface := user2.NewUserService(userRepositoryInterface)
	sessionRepository := session.NewSessionRepository(db)
	learnerRepositoryInterface := learner.NewLearnerRepository(db)
	sessionService := session2.NewSessionService(sessionRepository, learnerRepositoryInterface)
	mentorSessionParticipantServiceInterface := mentor_session_participant3.NewMentorSessionParticipantService(mentorSessionParticipantRepositoryInterface, userServiceInterface, sessionService)
	mentorSessionParticipantHandlerInterface := mentor_session_participant.NewMentorSessionParticipantHandler(mentorSessionParticipantServiceInterface)
	return mentorSessionParticipantHandlerInterface, nil
}

// mentor_session_wire.go:

var MentorSessionParticipantProviderSet = wire.NewSet(mentor_session_participant2.NewMentorSessionParticipantRepository, mentor_session_participant3.NewMentorSessionParticipantService, mentor_session_participant.NewMentorSessionParticipantHandler)
