// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package user

import (
	"github.com/google/wire"
	"github.com/philipnathan/pijar-backend/internal/user/handler"
	user2 "github.com/philipnathan/pijar-backend/internal/user/repository"
	user3 "github.com/philipnathan/pijar-backend/internal/user/service"
	"gorm.io/gorm"
)

// Injectors from google_wire.go:

func InitializedGoogleAuth(db *gorm.DB) (user.GoogleAuthHandlerInterface, error) {
	googleAuthRepoInterface := user2.NewGoogleAuthRepo(db)
	googleAuthServiceInterface := user3.NewGoogleAuthService(googleAuthRepoInterface)
	googleAuthHandlerInterface := user.NewGoogleAuthHandler(googleAuthServiceInterface)
	return googleAuthHandlerInterface, nil
}

// Injectors from mentor_wire.go:

func InitializedMentor(db *gorm.DB) (user.MentorUserHandlerInterface, error) {
	mentorUserRepositoryInterface := user2.NewMentorUserRepository(db)
	mentorUserServiceInterface := user3.NewMentorUserService(mentorUserRepositoryInterface)
	mentorUserHandlerInterface := user.NewMentorUserHandler(mentorUserServiceInterface)
	return mentorUserHandlerInterface, nil
}

// Injectors from user_wire.go:

func InitializedUser(db *gorm.DB) (user.UserHandlerInterface, error) {
	userRepositoryInterface := user2.NewUserRepository(db)
	userServiceInterface := user3.NewUserService(userRepositoryInterface)
	userHandlerInterface := user.NewUserHandler(userServiceInterface)
	return userHandlerInterface, nil
}

// google_wire.go:

var GoogleProviderSet = wire.NewSet(user2.NewGoogleAuthRepo, user3.NewGoogleAuthService, user.NewGoogleAuthHandler)

// mentor_wire.go:

var MentorProviderSet = wire.NewSet(user2.NewMentorUserRepository, user3.NewMentorUserService, user.NewMentorUserHandler)

// user_wire.go:

var UserProviderSet = wire.NewSet(user2.NewUserRepository, user3.NewUserService, user.NewUserHandler)
