// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/google/{entity}": {
            "get": {
                "description": "Register using Google Account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Oauth"
                ],
                "summary": "Register using Google Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "learner or mentor",
                        "name": "entity",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.RegisterUserResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/user.CustomError"
                        }
                    }
                }
            }
        },
        "/auth/google/{entity}/login": {
            "get": {
                "description": "Login using Google Account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Oauth"
                ],
                "summary": "Login using Google Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "learner or mentor",
                        "name": "entity",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/user.CustomError"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Get all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/category.Error"
                        }
                    }
                }
            }
        },
        "/categories/featured": {
            "get": {
                "description": "Get featured categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get featured categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FeaturedCategoryResponseDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/category.Error"
                        }
                    }
                }
            }
        },
        "/learners/biographies": {
            "put": {
                "description": "Update learner bio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learner Bio"
                ],
                "summary": "Update learner bio",
                "parameters": [
                    {
                        "description": "bio",
                        "name": "bio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learner.UpdateLearnerBioDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learner.UpdateLearnerBioResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create learner bio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learner Bio"
                ],
                "summary": "Create learner bio",
                "parameters": [
                    {
                        "description": "bio",
                        "name": "bio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learner.CreateLearnerBioDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/learner.CreateLearnerBioResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    }
                }
            }
        },
        "/learners/interests": {
            "get": {
                "description": "Get learner interests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learner"
                ],
                "summary": "Get learner interests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learner.GetLearnerInterestResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Add learner interests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learner"
                ],
                "summary": "Add learner interests",
                "parameters": [
                    {
                        "description": "User",
                        "name": "interest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learner.AddLearnerInterestsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learner.AddLearnerInterestsResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete learner interests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learner"
                ],
                "summary": "Delete learner interests",
                "parameters": [
                    {
                        "description": "User",
                        "name": "interest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learner.DeleteLearnerInterestsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learner.DeleteLearnerInterestsResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/learner.Error"
                        }
                    }
                }
            }
        },
        "/mentors/landingpage": {
            "get": {
                "description": "Get mentor landing page",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentor"
                ],
                "summary": "Get mentor landing page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagesize",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "categoryid",
                        "name": "categoryid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mentor.MentorLandingPageResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/mentor.Error"
                        }
                    }
                }
            }
        },
        "/mentors/{mentor_id}": {
            "get": {
                "description": "Get mentor details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentor"
                ],
                "summary": "Get mentor details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "mentor_id",
                        "name": "mentor_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mentor.GetMentorDetailsDto"
                        }
                    },
                    "400": {
                        "description": "Invalid mentor_id",
                        "schema": {
                            "$ref": "#/definitions/mentor.Error"
                        }
                    },
                    "404": {
                        "description": "Mentor not found",
                        "schema": {
                            "$ref": "#/definitions/mentor.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/mentor.Error"
                        }
                    }
                }
            }
        },
        "/mentors/{mentorid}/follow": {
            "post": {
                "description": "Follow or Unfollow Mentor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Follow"
                ],
                "summary": "Follow or Unfollow Mentor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mentor ID",
                        "name": "mentorid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/follow.FollowUnffolowResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/follow.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/follow.CustomError"
                        }
                    }
                }
            }
        },
        "/mentors/{mentorid}/status": {
            "get": {
                "description": "Check status of following",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Follow"
                ],
                "summary": "Check status of following",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mentor ID",
                        "name": "mentorid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/follow.IsFollowResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/follow.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/follow.CustomError"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search for sessions, mentors, and categories by keyword",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search for sessions, mentors, and categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Keyword min 3 characters long",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for sessions",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for sessions",
                        "name": "pagesize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/search.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/search.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/search.Error"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "description": "Get all sessions and can be filtered by categoryid and mentorid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get all sessions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "categoryid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Mentor ID",
                        "name": "mentorid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "highest",
                            "lowest"
                        ],
                        "type": "string",
                        "description": "Rating",
                        "name": "rating",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "newest",
                            "oldest"
                        ],
                        "type": "string",
                        "description": "Schedule",
                        "name": "schedule",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/session.GetAllSessionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/session.Error"
                        }
                    }
                }
            }
        },
        "/sessions/enrollments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get learner enrollments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session Enrollments"
                ],
                "summary": "Get learner enrollments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mentor_session_participant.EnrollmentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/mentor_session_participant.CustomError"
                        }
                    }
                }
            }
        },
        "/sessions/histories": {
            "get": {
                "description": "Get learner history session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learner"
                ],
                "summary": "Get learner history session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/session.GetUserHistorySessionResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/session.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/session.Error"
                        }
                    }
                }
            }
        },
        "/sessions/upcoming": {
            "get": {
                "description": "Get upcoming sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get upcoming sessions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagesize",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "categoryid",
                        "name": "categoryid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/session.GetAllSessionsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/session.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/session.Error"
                        }
                    }
                }
            }
        },
        "/sessions/{session_id}": {
            "get": {
                "description": "Get session detail by session_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get session detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/session.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/session.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/session.Error"
                        }
                    }
                }
            }
        },
        "/sessions/{session_id}/enroll": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Used for learner to join a mentor session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session Enrollments"
                ],
                "summary": "Used for learner to join a mentor session",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mentor_session_participant.RegistrationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "$ref": "#/definitions/mentor_session_participant.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/mentor_session_participant.CustomError"
                        }
                    }
                }
            }
        },
        "/sessions/{session_id}/review": {
            "get": {
                "description": "Get session reviews",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session Review"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pagesize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/session_review.GetAllReviewsResponse"
                        }
                    },
                    "400": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/session_review.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/session_review.CustomError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create session review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session Review"
                ],
                "summary": "Create session review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Session Review",
                        "name": "session_review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/session_review.SessionReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/session_review.SessionReviewResponse"
                        }
                    },
                    "400": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/session_review.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/session_review.CustomError"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "description": "Get the profile of the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login Information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.DeleteUserResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            }
        },
        "/users/me/details": {
            "patch": {
                "description": "Update user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user details",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserDetailsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserDetailsResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            }
        },
        "/users/me/password": {
            "patch": {
                "description": "Update user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "description": "User",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ChangePasswordDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ChangePasswordResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            }
        },
        "/users/notifications": {
            "get": {
                "description": "Get all user's notifications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get all user's notifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.GetAllNotificationsResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/notification.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/notification.Error"
                        }
                    }
                }
            }
        },
        "/users/notifications/read/{notificationid}": {
            "put": {
                "description": "Change IsRead Field to True",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Read notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.ReadNotificationResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/notification.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/notification.Error"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RegisterUserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.RegisterUserResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            }
        },
        "/users/registermentor": {
            "post": {
                "description": "Register mentor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register mentor",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RegisterMentorDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.RegisterMentorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/user.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "category.Category": {
            "type": "object",
            "properties": {
                "category_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "sub_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/category.SubCategory"
                    }
                }
            }
        },
        "category.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "category not found"
                }
            }
        },
        "category.SubCategory": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "sub_category_name": {
                    "type": "string"
                }
            }
        },
        "dto.FeaturedCategoryResponseDto": {
            "type": "object",
            "properties": {
                "category_name": {
                    "type": "string",
                    "example": "Coding Basics"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.png"
                }
            }
        },
        "follow.CustomError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "follow.FollowUnffolowResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "follow.IsFollowResponse": {
            "type": "object",
            "properties": {
                "is_following": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "learner.AddLearnerInterestsDto": {
            "type": "object",
            "required": [
                "category_id"
            ],
            "properties": {
                "category_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                }
            }
        },
        "learner.AddLearnerInterestsResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "interests added successfully"
                }
            }
        },
        "learner.CreateLearnerBioDto": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string",
                    "example": "My bio"
                },
                "institution": {
                    "type": "string",
                    "example": "Google"
                },
                "occupation": {
                    "type": "string",
                    "example": "Software Engineer"
                }
            }
        },
        "learner.CreateLearnerBioResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "bio added successfully"
                }
            }
        },
        "learner.DeleteLearnerInterestsDto": {
            "type": "object",
            "required": [
                "category_id"
            ],
            "properties": {
                "category_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                }
            }
        },
        "learner.DeleteLearnerInterestsResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "interests deleted successfully"
                }
            }
        },
        "learner.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "interest not found"
                }
            }
        },
        "learner.GetLearnerInterestResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learner.InterestOnlyDto"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "interests retrieved successfully"
                }
            }
        },
        "learner.InterestOnlyDto": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer",
                    "example": 1
                },
                "category_name": {
                    "type": "string",
                    "example": "Development"
                }
            }
        },
        "learner.UpdateLearnerBioDto": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string",
                    "example": "My bio"
                },
                "institution": {
                    "type": "string",
                    "example": "Google"
                },
                "occupation": {
                    "type": "string",
                    "example": "Software Engineer"
                }
            }
        },
        "learner.UpdateLearnerBioResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "bio updated successfully"
                }
            }
        },
        "mentor.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "mentor.GetMentorDetailsDto": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "mentor_bio": {
                    "type": "string"
                },
                "mentor_experiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mentor_dto.MentorExperiences"
                    }
                },
                "mentor_expertise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mentor_dto.MentorExpertises"
                    }
                },
                "occupation": {
                    "type": "string",
                    "example": "Software Engineer"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "mentor.MentorDetails": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "occupation": {
                    "type": "string",
                    "example": "Software Engineer"
                }
            }
        },
        "mentor.MentorLandingPageResponseDto": {
            "type": "object",
            "properties": {
                "countData": {
                    "type": "integer"
                },
                "currentPage": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mentor.MentorDetails"
                    }
                },
                "dataPerPage": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "mentor_dto.MentorExperiences": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "occupation": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "mentor_dto.MentorExpertises": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "expertise": {
                    "type": "string"
                }
            }
        },
        "mentor_session_participant.CustomError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "mentor_session_participant.EnrollmentDetails": {
            "type": "object",
            "properties": {
                "mentor_session_participant_id": {
                    "type": "integer"
                },
                "session_details": {
                    "$ref": "#/definitions/mentor_session_participant.SessionDetails"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "mentor_session_participant.EnrollmentResponse": {
            "type": "object",
            "properties": {
                "enrollments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mentor_session_participant.EnrollmentDetails"
                    }
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "mentor_session_participant.RegistrationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "mentor_session_participant.SessionDetails": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "mentor_session_id": {
                    "type": "integer"
                },
                "mentor_session_title": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                }
            }
        },
        "notification.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "notification.GetAllNotificationsResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "No notifications found"
                },
                "notification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notification.Notif"
                    }
                }
            }
        },
        "notification.Notif": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_read": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "schedule for python basic has been changed"
                },
                "type": {
                    "type": "string",
                    "example": "schedule_change"
                }
            }
        },
        "notification.ReadNotificationResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Notification with ID 1 has been read"
                }
            }
        },
        "search.Category": {
            "type": "object",
            "properties": {
                "category_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                }
            }
        },
        "search.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "search.GetAllSessionsResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.Session"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "search.MentorDetailLandingPage": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "occupation": {
                    "type": "string",
                    "example": "Software Engineer"
                }
            }
        },
        "search.MentorDetails": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                }
            }
        },
        "search.SearchResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.Category"
                    }
                },
                "mentors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.MentorDetailLandingPage"
                    }
                },
                "sessions": {
                    "$ref": "#/definitions/search.GetAllSessionsResponse"
                }
            }
        },
        "search.Session": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "day": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "mentor_details": {
                    "$ref": "#/definitions/search.MentorDetails"
                },
                "schedule": {
                    "type": "string"
                },
                "session_id": {
                    "type": "integer"
                },
                "short_description": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "session.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "session.GetAllSessionsResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/session.Session"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "session.GetUserHistorySessionResponseDto": {
            "type": "object",
            "properties": {
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/session.History"
                    }
                }
            }
        },
        "session.History": {
            "type": "object",
            "properties": {
                "mentor_details": {
                    "$ref": "#/definitions/session.MentorDetails"
                },
                "mentor_session_title": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "session.MentorDetails": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                }
            }
        },
        "session.Session": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "day": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "mentor_details": {
                    "$ref": "#/definitions/session.MentorDetails"
                },
                "schedule": {
                    "type": "string"
                },
                "session_id": {
                    "type": "integer"
                },
                "short_description": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "session_review.CustomError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "session_review.GetAllReviewsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/session_review.ReviewDetail"
                    }
                },
                "session_id": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "session_review.ReviewDetail": {
            "type": "object",
            "properties": {
                "rating": {
                    "type": "integer"
                },
                "review": {
                    "type": "string"
                },
                "review_id": {
                    "type": "integer"
                },
                "user_details": {
                    "$ref": "#/definitions/session_review.UserDetails"
                }
            }
        },
        "session_review.SessionReviewRequest": {
            "type": "object",
            "properties": {
                "rating": {
                    "type": "integer"
                },
                "review": {
                    "type": "string"
                }
            }
        },
        "session_review.SessionReviewResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "session_review.UserDetails": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                }
            }
        },
        "user.ChangePasswordDto": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "newPassword123"
                },
                "old_password": {
                    "type": "string",
                    "example": "oldPassword123"
                }
            }
        },
        "user.ChangePasswordResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "password changed successfully"
                }
            }
        },
        "user.CustomError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "user.DeleteUserResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "user deleted successfully"
                }
            }
        },
        "user.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "user not found"
                }
            }
        },
        "user.GetUserResponseDto": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "is_learner": {
                    "type": "boolean",
                    "example": true
                },
                "is_mentor": {
                    "type": "boolean",
                    "example": true
                },
                "phone_number": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "user.LoginUserDto": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "user.LoginUserResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "user logged in successfully"
                }
            }
        },
        "user.RegisterMentorDto": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.RegisterMentorResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyAsgh435789"
                },
                "message": {
                    "type": "string",
                    "example": "mentor registered successfully"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyAsgh435789"
                }
            }
        },
        "user.RegisterUserDto": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "user.RegisterUserResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "user registered successfully"
                }
            }
        },
        "user.UpdateUserDetailsDto": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1990-02-01"
                },
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "phone_number": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "user.UpdateUserDetailsResponseDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "user details updated successfully"
                }
            }
        },
        "user.UserProfileResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "\"Type 'Bearer TOKEN' to correctly set the API Key\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Pijar API",
	Description:      "This is a Pijar API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
